<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>布萊德的學習網站</title>
    <link>https://bradleetw.github.io/</link>
    <description>Recent content on 布萊德的學習網站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Jul 2018 17:41:05 +0800</lastBuildDate>
    
	<atom:link href="https://bradleetw.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>讓 iTerm2 有很酷炫的外表!</title>
      <link>https://bradleetw.github.io/post/others/iterm2setting/</link>
      <pubDate>Sun, 29 Jul 2018 17:41:05 +0800</pubDate>
      
      <guid>https://bradleetw.github.io/post/others/iterm2setting/</guid>
      <description>常看到電影裡的駭客在操作電腦時所用的 command line 都是那麼的酷, 今天就來速記一下參考網路上別人分享設定的步驟. 參考的來源: 超簡單！十分鐘打造漂亮又好用的 zsh command line 環境
iTerm2 的安裝就沒記錄, 因為早就安裝過, 安裝流程也不難.
安裝 zsh + oh-my-zsh zsh 是類似 bash, 在一般的使用上兩者差不多, 而 zsh 要再搭配上 oh-my-zsh(它是基於 zsh 的一個擴展工具集, 提供了豐富的擴展功能), 就可以設置有趣的主題風格(Themes), 而 oh-my-zsh 本身就提供了很多主題可以讓你挑選.
 安裝 zsh:
$ brew install zsh  將 zsh 改成預設 shell:
$ sudo sh -c &amp;quot;echo $(which zsh) &amp;gt;&amp;gt; /etc/shells&amp;quot; $ chsh -s $(which zsh)  安裝 oh-my-zsh:
$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh $ bash ./install.sh   安裝 zsh theme: powerlevel9k  下載好用的主題:</description>
    </item>
    
    <item>
      <title>如何利用 GitHub Pages 建立博客?</title>
      <link>https://bradleetw.github.io/post/deployment/githubblog/usegithub_1/</link>
      <pubDate>Thu, 19 Jul 2018 14:31:14 +0800</pubDate>
      
      <guid>https://bradleetw.github.io/post/deployment/githubblog/usegithub_1/</guid>
      <description>什麼是 GitHub Pages(blog)? 在大家的印象中 GitHub 只是一個利用 git 讓大家免費放代碼, 追蹤 issues , 和各地好手討論的地方. 某天看到ㄧ篇文章的 URL 很特別, 是 https://xxxxxx.github.io/ , 和我平常看 GitHub 的 https://github.com 很像, 後來才知道 GitHub 可以讓使用者在上面放 blog(有空還是要看看人家的 &amp;ldquo;Read the guide&amp;rdquo;), 重點是&amp;rdquo;不用錢&amp;rdquo;(廢話, 不過被微軟買掉後會不會調整, 就不知了).
refer to: What is GitHub Pages?
為什麼要使用 GitHub 來架設 blog? 在嘗試 GitHub 架設 blog 之前, 我正在學習使用 Google Cloud platfrom 試著架設 blog 網站, 自己申請域名, 申請 SSL, 突然想起 GitHub 上也有 blog 功能而且我也還沒試過, 查了一下, 還蠻容易設定的, 而且省去申請域名, SSL, 不用擔心服務器防火牆的相關問題, 當然你必須要有 GitHub 帳號(廢話 ~).</description>
    </item>
    
    <item>
      <title>透過調整 config.toml 設定 Hugo 網站(1)</title>
      <link>https://bradleetw.github.io/post/staticsitegenerator/hugo/usehugo_2/</link>
      <pubDate>Tue, 17 Jul 2018 15:10:22 +0800</pubDate>
      
      <guid>https://bradleetw.github.io/post/staticsitegenerator/hugo/usehugo_2/</guid>
      <description>透過合適的模板來學習調整 Hugo 網站 一般來說在 GitHub 上的每一個模板除了使用說明檔(Readme.md)之外, 也會附上如何使用的範例, 例如你可以在 themes/ananke/exampleSite (ananke 換成你所下載的模板名稱)中看到相關的使用範例, 透過這些也可以很快上手 Hugo 網站的調整設定. 不過我也下載過很多沒附上 exampleSite 的模板, 而且Readme.md 也不是寫給初學者看的, 造成學習上的難度. 所以初學者挑選學習的模板請謹慎. 官方 Quick start 中所用的模板 ananke 就涵蓋這些資料.
config.toml Hugo 網站主要是透過 config.toml 這個檔案來調控, 當你透過 $ hugo new site YourWebSite 建立空網站時 Hugo 就幫你建立一個 config.toml (也支持 yaml 和 json 格式, 預設是 toml 格式).
直接先用所下載模板提供的 config.toml, themes/ananke/exampleSite/config.toml 取代原本 config.toml, 了解一下模板的 README.md, 再來更改相關的欄位.
 先移除 themesDir = &amp;quot;../..&amp;quot; 這行.
 title = &amp;ldquo;Your new Hugo Site Title&amp;rdquo;</description>
    </item>
    
    <item>
      <title>使用Hugo產生靜態網頁</title>
      <link>https://bradleetw.github.io/post/staticsitegenerator/hugo/usehugo_1/</link>
      <pubDate>Tue, 17 Jul 2018 12:00:00 +0800</pubDate>
      
      <guid>https://bradleetw.github.io/post/staticsitegenerator/hugo/usehugo_1/</guid>
      <description>為什麼要用靜態網頁產生器(Static Site Generators)? 靜態網頁產生器一般都會有很多現成的模板(template), 只要相關設定正確, 使用者只要專心編寫你的內容即可(但只要你有強迫症, 可能就會想要自己調整更多的細節).
原本我不知有這類的工具, 是因為在學習別的項目時看到別人的文章, 只用一兩句話描述說可以用Hugo很快產生網頁, 只要上網查找學習就可以, 然後我就上當了&amp;hellip;
靜態網頁產生器這類工具確實可以很快產生網頁, 只要套一套現成模板, 輸入內容即可, 而且網路上也可以找到學習資源, 但是也可能因為使用這類工具太“簡單”, 相關的學習資源就沒有我預期的易懂, 所以我花了超乎預期的時間來了解使用Hugo.
下載安裝 可參考網路資源: 1. 在 Mac 上安装 Hugo 2. Hugo 官網
我是透過 brew 下載安裝:
$ brew install hugo  確認安裝結果:
$ hugo version Hugo Static Site Generator v0.42.2 darwin/amd64  建立網站 $ hugo new site MakeWebSite  hugo 會建立 MakeWebSite 目錄, 而且在這目錄底下產生 2 個檔案及 6 個目錄
. ├── archetypes │ └── default.</description>
    </item>
    
  </channel>
</rss>